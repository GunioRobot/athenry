#!/usr/bin/env ruby
# Distributed under the terms of the MIT License 
# Copyright (c) 2009 Greg Fitzgerald <netzdamon@gmail.com>
# vim: set sw=2 sts=2 et tw=80 :
athenrybase = __FILE__
while File.symlink?(athenrybase)
  athenrybase = File.expand_path(File.readlink(athenrybase), File.dirname(athenrybase))
end

$:.unshift(File.join(File.dirname(athenrybase), '..', 'lib'))

require 'rubygems'
begin
  gem "commander", ">= 4.0"
  require "commander/import"
rescue Gem::LoadError
end
require 'athenry'

program :name, 'Athenry'
program :version, Athenry::Version::STRING
program :description, 'Creates a Gentoo chroot and automates stage building'
program :help, 'Author', 'Greg Fitzgerald <netzdamon@gmail.com>'
program :help, 'See Also', 'http://gregf.github.com/athenry/'

global_option('--config PATH', 'Specify the default config path') { |path| $configpath = path }
global_option('-c', '--chroot NAME', 'Use the specified chroot directory.') { |name| $chrootname = name }
global_option('-s', '--stageurl URL', 'Use the specified stage url.') { |url| $stageurl = url }
global_option('-p', '--snapshoturl URL', 'Use the specified snapshot url.') { |url| $snapshoturl = url }

command :setup do |c|
  c.syntax = 'athenry setup [options]'
  c.description = 'Fetches files and creates necessary directories'
  c.action do |args, options|
    Athenry::run.setup(args)
  end
end

command :build do |c|
  c.syntax = 'athenry build [options] <step>'
  c.description = 'Executes a single command on the given chroot <step>'
  c.action do |args, options|
    Athenry::run.build(args)
  end
end

command :target do |c|
  c.syntax = 'athenry target [options] <target>'
  c.description = 'Starts building the target stage specified'
  c.action do |args, options|
    Athenry::run.target(args)
  end
end

command :resume do |c|
  c.syntax = 'athenry resume [options]'
  c.description = 'Resume from last saved state'
  c.action do |args, options|
    Athenry::run.resume
  end
end

command :clean do |c|
  c.syntax = 'athenry clean [options]'
  c.description = 'Cleans up any mess made'
  c.action do |args, options|
    Athenry::run.clean(args)
  end
end

command :shell do |c|
  c.syntax = 'athenry shell [options]'
  c.description = 'Run Athenry commands directly through an irb like shell'
  c.action do |args, options|
    Athenry::run.shell
  end
end

command :rescue do |c|
  c.syntax = 'athenry rescue [options]'
  c.description = 'Chroot into the current stage to perform commands manually'
  c.action do |args, options|
    Athenry::run.rescue
  end
end

command :info do |c|
  c.syntax = 'athenry info [options]'
  c.description = 'Displays information about athenry and its chroots'
  c.action do |args, options|
    Athenry::run.info(args)
  end
end
